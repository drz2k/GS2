cfg TurbineMaterials {
    cfg Iron {
        // Iron is special, do not remove or disable items - stuff will break
        Tier = 1
        InertiaMultiplier = 1       // Higher - will take longer to spin up and slow down
        MaxMJPerTick = 100000           // Energy produced (steam/fuel calculated from that)
        RegisterBlade = Yes         // Enables registration of blade item (default)
        RegisterRotor = Yes         // Enables registration of blade item (default)
        RegisterKit = No            // Disables registration of upgrade kit item
    }
    cfg Gold {
        Tier = 2
        InertiaMultiplier = 1.1
        MaxMJPerTick = 15
        RegisterBlade = No          // Disables registration of blade item
    }
    cfg Steel {
        Tier = 3
        ReqOreDict = ingotSteel     // Will only be registered if this material is present in OD
        InertiaMultiplier = 1
        MaxMJPerTick = 20
    }
    cfg Bronze {
        Tier = 3
        ReqOreDict = ingotBronze
        InertiaMultiplier = 1.1
        MaxMJPerTick = 20
    }
    cfg Enderium {
        Tier = 4
        ReqOreDict = ingotEnderium
        InertiaMultiplier = 1.2
        MaxMJPerTick = 50
    }
    cfg Vibrant {
        Tier = 4
        ReqOreDict = ingotPhasedGold
        InertiaMultiplier = 1.2
        MaxMJPerTick = 50
    }
    cfg Manyullyn {
        Tier = 4
        ReqOreDict = ingotManyullyn
        InertiaMultiplier = 1.2
        MaxMJPerTick = 50
    }
    cfg AdvAlloy {
        Tier = 4
        ReqMod = IC2
        InertiaMultiplier = 1.2
        MaxMJPerTick = 50
    }
}


recipes { // Iron
    X = OD:ingotIron
    B = I:advgenerators:TurbineBladeIron
    R = I:advgenerators:TurbineRotorIron

    F = I:advgenerators:IronFrame
    w = I:advgenerators:IronWiring
    W = I:advgenerators:IronTubing
    K = I:advgenerators:UpgradeKit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:TurbineIron
    FWF

    smelt: $R => $X * 11 + 0 xp
}

recipes { // Gold
    X = OD:ingotGold
    R = I:advgenerators:TurbineRotorGold
    I = I:advgenerators:TurbineRotorIron
    L = I:flint

    F = I:advgenerators:IronFrame
    w = I:advgenerators:IronWiring
    W = I:advgenerators:IronTubing
    K = I:advgenerators:UpgradeKit

    if (HaveMod EnderIO || HaveMod ThermalExpansion) {
        if HaveMod EnderIO {
            enderio-smelt: $I + $X + 5000 RF => $R

            // Disabled - can't register bonus exclusions with current stable build of EIO leading to dupe
            // enderio-sag-mill: $R + 2000 RF => OD:ingotIron * 11 + OD:ingotGold NOBONUS
        }
        if HaveMod ThermalExpansion {
            TE-smelt: $I + $X + 5000 RF => $R
        }
    } else {
        shapeless: IX => $R
    }

    set-container: $R => $I
    shapeless: LR => $X

    FWF
    wRw => B:advgenerators:TurbineGold
    FWF

    shapeless: RK => I:advgenerators:TurbineKitGold
}

if HaveOD ingotSteel { // Steel
    X = OD:ingotSteel
    B = I:advgenerators:TurbineBladeSteel
    R = I:advgenerators:TurbineRotorSteel

    F = I:advgenerators:IronFrame
    w = I:advgenerators:IronWiring
    W = I:advgenerators:IronTubing
    K = I:advgenerators:UpgradeKit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:TurbineSteel
    FWF

    shapeless: RK => I:advgenerators:TurbineKitSteel
    smelt: $R => $X * 11 + 0 xp
}

if HaveOD ingotBronze { // Bronze
    X = OD:ingotBronze
    B = I:advgenerators:TurbineBladeBronze
    R = I:advgenerators:TurbineRotorBronze

    F = I:advgenerators:IronFrame
    w = I:advgenerators:IronWiring
    W = I:advgenerators:IronTubing
    K = I:advgenerators:UpgradeKit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:TurbineBronze
    FWF

    shapeless: RK => I:advgenerators:TurbineKitBronze
    smelt: $R => $X * 11 + 0 xp
}

if HaveOD ingotEnderium { // Enderium
    X = OD:ingotEnderium
    B = I:advgenerators:TurbineBladeEnderium
    R = I:advgenerators:TurbineRotorEnderium

    F = I:advgenerators:IronFrame
    w = I:advgenerators:IronWiring
    W = I:advgenerators:IronTubing
    K = I:advgenerators:UpgradeKit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:TurbineEnderium
    FWF

    shapeless: RK => I:advgenerators:TurbineKitEnderium
    smelt: $R => $X * 11 + 0 xp
}

if HaveOD ingotPhasedGold { // Vibrant
    X = OD:ingotPhasedGold
    B = I:advgenerators:TurbineBladeVibrant
    R = I:advgenerators:TurbineRotorVibrant

    F = I:advgenerators:IronFrame
    w = I:advgenerators:IronWiring
    W = I:advgenerators:IronTubing
    K = I:advgenerators:UpgradeKit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:TurbineVibrant
    FWF

    shapeless: RK => I:advgenerators:TurbineKitVibrant
    smelt: $R => $X * 11 + 0 xp
}

if HaveOD ingotManyullyn { // Manyullyn
    X = OD:ingotManyullyn
    B = I:advgenerators:TurbineBladeManyullyn
    R = I:advgenerators:TurbineRotorManyullyn

    F = I:advgenerators:IronFrame
    w = I:advgenerators:IronWiring
    W = I:advgenerators:IronTubing
    K = I:advgenerators:UpgradeKit

    _XX
    _XX => $B * 4
    __X

    BBB
    BXB => $R
    BBB

    FWF
    wRw => B:advgenerators:TurbineManyullyn
    FWF

    shapeless: RK => I:advgenerators:TurbineKitManyullyn
    smelt: $R => $X * 11 + 0 xp
}

if HaveMod IC2 { // Advanced Alloy
    B = I:advgenerators:TurbineBladeAdvAlloy
    R = I:advgenerators:TurbineRotorAdvAlloy

    F = I:advgenerators:IronFrame
    w = I:advgenerators:IronWiring
    W = I:advgenerators:IronTubing
    K = I:advgenerators:UpgradeKit

    if HaveMod "IC2@[2.2.999]" {
        // This is a hacky way to detect IC2 classic, since it uses the same mod id, 
        // but it's version number seems to be 2.2.999
        // lets hope IC2exp never reaches that... 

        X = I:IC2:"item.itemPartAlloy"

        _XX
        _XX => $B * 4
        __X

        BBB
        BXB => $R
        BBB
    } else {
        // This is for "normal" IC2

        X = I:IC2:itemPartAlloy
        Z = I:IC2:itemRecipePart@12

        _XX
        _XX => $B * 4
        __X

        BBB
        BZB => $R
        BBB
    }

    FWF
    wRw => B:advgenerators:TurbineAdvAlloy
    FWF

    shapeless: RK => I:advgenerators:TurbineKitAdvAlloy
}
